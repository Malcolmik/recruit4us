import { pgTable, serial, varchar, text, timestamp, integer, boolean } from 'drizzle-orm/pg-core'
export const users = pgTable('users', { id: serial('id').primaryKey(), email: varchar('email',{length:255}).notNull().unique(), passwordHash: varchar('password_hash',{length:255}).notNull(), role: varchar('role',{length:32}).notNull(), createdAt: timestamp('created_at').defaultNow().notNull() })
export const jobs = pgTable('jobs', { id: serial('id').primaryKey(), title: varchar('title',{length:255}).notNull(), department: varchar('department',{length:255}), description: text('description'), createdAt: timestamp('created_at').defaultNow().notNull() })
export const candidates = pgTable('candidates', { id: serial('id').primaryKey(), fullName: varchar('full_name',{length:255}).notNull(), email: varchar('email',{length:255}).notNull(), phone: varchar('phone',{length:32}), cvUrl: text('cv_url'), createdAt: timestamp('created_at').defaultNow().notNull() })
export const auditLogs = pgTable('audit_logs', { id: serial('id').primaryKey(), userId: integer('user_id'), action: varchar('action',{length:128}).notNull(), entity: varchar('entity',{length:64}), entityId: integer('entity_id'), ip: varchar('ip',{length:64}), createdAt: timestamp('created_at').defaultNow().notNull() })
export const bookingLinks = pgTable('booking_links', { id: serial('id').primaryKey(), token: varchar('token',{length:128}).notNull().unique(), jobId: integer('job_id'), candidateId: integer('candidate_id'), expiresAt: timestamp('expires_at').notNull(), scheduledAt: timestamp('scheduled_at'), createdAt: timestamp('created_at').defaultNow().notNull(), used: boolean('used').default(false).notNull() })
